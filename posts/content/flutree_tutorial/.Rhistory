axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent")) +
scale_x_continuous(breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey90", "white"), alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(fill = guide_legend(title = "Clade", ncol = 2), # customize our legend position
size = guide_legend(title = "RBD Mutations")) +
theme_tree2(legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent")) +
scale_x_continuous(breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey90", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(fill = guide_legend(title = "Clade", ncol = 2), # customize our legend position
size = guide_legend(title = "RBD Mutations")) +
theme_tree2(legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent")) +
scale_x_continuous(breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey80", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(fill = guide_legend(title = "Clade", ncol = 2), # customize our legend position
size = guide_legend(title = "RBD Mutations")) +
theme_tree2(legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent")) +
scale_x_continuous(breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey80", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(fill = guide_legend(title = "Clade", ncol = 2), # customize our legend position
size = guide_legend(title = "RBD Mutations")) +
theme_tree2(legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent")) +
scale_x_continuous(breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey70", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(fill = guide_legend(title = "Clade", ncol = 2, override.aes = list(fill = NA)), # customize our legend position
size = guide_legend(title = "RBD Mutations", override.aes = list(fill = NA))) +
theme_tree2(legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent")) + # Make the legend keys transparent
scale_x_continuous(breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey90", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(
fill = guide_legend(title = "Clade", ncol = 2),
size = guide_legend(title = "RBD Mutations")
) +
theme_tree2(
legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent", colour = "transparent") # Make legend key backgrounds transparent
) +
scale_x_continuous(
breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)
) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey90", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
#! echo: false
ggsave('results/plots/h3_tree.png',
tree_ann_p1,
height = 6,
width = 4,
dpi = 300)
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(
fill = guide_legend(title = "Clade", ncol = 2),
size = guide_legend(title = "RBD Mutations")
) +
theme_tree2(
legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent", colour = "transparent") # Make legend key backgrounds transparent
) +
scale_x_continuous(
breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)
) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey90", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(
fill = guide_legend(title = "Clade", ncol = 2),
size = guide_legend(title = "RBD Mutations")
) +
theme_tree2(
legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent", colour = "transparent") # Make legend key backgrounds transparent
) +
scale_x_continuous(
breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)
) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Add alternating grey and white background for each year using annotation_custom without borders
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0, "grey90", "white"), col = NA, alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
# Print the final plot
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(
fill = guide_legend(title = "Clade", ncol = 2),
size = guide_legend(title = "RBD Mutations")
) +
theme_tree2(
legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent", colour = "transparent") # Make legend key backgrounds transparent
) +
scale_x_continuous(
breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)
) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Adding alternating grey and white background for each year
for (year in seq(2009, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0,
"grey90",
"white"),
col = NA,
alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
tree_ann_p1
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.4) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(
fill = guide_legend(title = "Clade", ncol = 2),
size = guide_legend(title = "RBD Mutations")
) +
theme_tree2(
legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent", colour = "transparent") # Make legend key backgrounds transparent
) +
scale_x_continuous(
breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)
) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Adding alternating grey and white background for each year
for (year in seq(2008, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0,
"grey90",
"white"),
col = NA,
alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
tree_ann_p1
#! echo: false
ggsave('results/plots/h3_tree.png',
tree_ann_p1,
height = 6,
width = 4,
dpi = 300)
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.5) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(
fill = guide_legend(title = "Clade", ncol = 2),
size = guide_legend(title = "RBD Mutations")
) +
theme_tree2(
legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent", colour = "transparent") # Make legend key backgrounds transparent
) +
scale_x_continuous(
breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)
) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Adding alternating grey and white background for each year
for (year in seq(2008, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0,
"grey90",
"white"),
col = NA,
alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
tree_ann_p1
#! echo: false
ggsave('results/plots/h3_tree.png',
tree_ann_p1,
height = 6,
width = 4,
dpi = 300)
# Load required libraries
library(ggplot2)
library(ggtree)
library(grid)
# Define the base plot
tree_ann_p1 <- tree_ann_p +
geom_tippoint(aes(fill = factor(`short-clade`), # assigning fill instead of color allows a border
size = RBD), # reflect RBD mutations called by nextclade
alpha = 0.9, # transparency of points
shape = 21, # empty circle
stroke = 0.5) + # point border thickness
scale_size(range = c(0.5, 2)) +
xlab("Time") +
guides(
fill = guide_legend(title = "Clade", ncol = 2), # customize our legend
size = guide_legend(title = "RBD Mutations")
) +
theme_tree2( # justify legend
legend.position = c(0.40, 0.45),
axis.text.x = element_text(size = 10),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.01, "cm"),
legend.key.height = unit(0.3, "cm"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent", colour = "transparent") # Make legend key backgrounds transparent
) +
scale_x_continuous( # define x axis labels and breaks
breaks = seq(2009, 2023, by = 2),
labels = seq(2009, 2023, by = 2)
) + # define the date increment shown
scale_fill_manual(values = palette) # Set to our palette for points
# Adding alternating grey and white background for each year
for (year in seq(2008, 2023, by = 1)) {
tree_ann_p1 <- tree_ann_p1 +
annotation_custom(
grob = rectGrob(gp = gpar(fill = ifelse(year %% 2 == 0,
"grey80",
"white"),
col = NA,
alpha = 0.3)),
xmin = year, xmax = year + 1, ymin = -Inf, ymax = Inf
)
}
tree_ann_p1
#! echo: false
ggsave('results/plots/h3_tree.png',
tree_ann_p1,
height = 5,
width = 4,
dpi = 300)
